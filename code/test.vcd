$date
	Mon Jul 25 16:48:33 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! out [31:0] $end
$var reg 16 " a [15:0] $end
$var reg 16 # b [15:0] $end
$var integer 32 $ err_flag [31:0] $end
$var integer 32 % i [31:0] $end
$var integer 32 & j [31:0] $end
$scope module test $end
$var wire 16 ' A [15:0] $end
$var wire 16 ( B [15:0] $end
$var wire 32 ) Prod [31:0] $end
$var integer 32 * i [31:0] $end
$scope module fal3 $end
$var wire 32 + a [31:0] $end
$var wire 32 , b [31:0] $end
$var wire 32 - cin [31:0] $end
$var wire 32 . cout [31:0] $end
$var wire 32 / sum [31:0] $end
$upscope $end
$scope module fal2 $end
$var wire 32 0 a [31:0] $end
$var wire 32 1 b [31:0] $end
$var wire 32 2 cin [31:0] $end
$var wire 32 3 cout [31:0] $end
$var wire 32 4 sum [31:0] $end
$upscope $end
$scope begin lev7[0] $end
$scope module l7 $end
$var wire 32 5 a [31:0] $end
$var wire 32 6 b [31:0] $end
$var wire 32 7 cin [31:0] $end
$var wire 32 8 cout [31:0] $end
$var wire 32 9 sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev7[1] $end
$scope module l7 $end
$var wire 32 : a [31:0] $end
$var wire 32 ; b [31:0] $end
$var wire 32 < cin [31:0] $end
$var wire 32 = cout [31:0] $end
$var wire 32 > sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev7[2] $end
$scope module l7 $end
$var wire 32 ? a [31:0] $end
$var wire 32 @ b [31:0] $end
$var wire 32 A cin [31:0] $end
$var wire 32 B cout [31:0] $end
$var wire 32 C sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev7[3] $end
$scope module l7 $end
$var wire 32 D a [31:0] $end
$var wire 32 E b [31:0] $end
$var wire 32 F cin [31:0] $end
$var wire 32 G cout [31:0] $end
$var wire 32 H sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev7[4] $end
$scope module l7 $end
$var wire 32 I a [31:0] $end
$var wire 32 J b [31:0] $end
$var wire 32 K cin [31:0] $end
$var wire 32 L cout [31:0] $end
$var wire 32 M sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev6[0] $end
$scope module l6 $end
$var wire 32 N a [31:0] $end
$var wire 32 O b [31:0] $end
$var wire 32 P cin [31:0] $end
$var wire 32 Q cout [31:0] $end
$var wire 32 R sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev6[1] $end
$scope module l6 $end
$var wire 32 S a [31:0] $end
$var wire 32 T b [31:0] $end
$var wire 32 U cin [31:0] $end
$var wire 32 V cout [31:0] $end
$var wire 32 W sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev6[2] $end
$scope module l6 $end
$var wire 32 X a [31:0] $end
$var wire 32 Y b [31:0] $end
$var wire 32 Z cin [31:0] $end
$var wire 32 [ cout [31:0] $end
$var wire 32 \ sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev5[0] $end
$scope module l5 $end
$var wire 32 ] a [31:0] $end
$var wire 32 ^ b [31:0] $end
$var wire 32 _ cin [31:0] $end
$var wire 32 ` cout [31:0] $end
$var wire 32 a sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev5[1] $end
$scope module l5 $end
$var wire 32 b a [31:0] $end
$var wire 32 c b [31:0] $end
$var wire 32 d cin [31:0] $end
$var wire 32 e cout [31:0] $end
$var wire 32 f sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev4[0] $end
$scope module l4 $end
$var wire 32 g a [31:0] $end
$var wire 32 h b [31:0] $end
$var wire 32 i cin [31:0] $end
$var wire 32 j cout [31:0] $end
$var wire 32 k sum [31:0] $end
$upscope $end
$upscope $end
$scope begin lev4[1] $end
$scope module l4 $end
$var wire 32 l a [31:0] $end
$var wire 32 m b [31:0] $end
$var wire 32 n cin [31:0] $end
$var wire 32 o cout [31:0] $end
$var wire 32 p sum [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx p
bx00 o
bz n
bx0 m
bx00 l
bx k
bx0 j
bx i
bx0 h
bx g
bx f
bx00 e
bx0 d
bx c
bx00 b
bx a
bx0 `
bx _
bx0 ^
bx ]
bx \
bx0 [
bx Z
bx0 Y
bx X
bx W
bx00 V
bx0 U
bx T
bx0 S
bx R
bx0 Q
bx P
bx0 O
bx N
bx M
bx0 L
bz K
bz J
bz I
bx H
bx0 G
bz F
bz E
bz D
bx C
bx0 B
bz A
bz @
bz ?
bx >
bx0 =
bz <
bz ;
bz :
bx 9
bx0 8
bz 7
bz 6
bz 5
bx 4
bx00 3
bx00 2
bx0 1
bx 0
bx /
bx0 .
bx -
bx0 ,
bx +
bx *
bx )
bx (
bx '
b0 &
b0 %
b1 $
bx #
bx "
bx !
$end
#10
b0 !
b0 )
b0 4
b0 3
b0 e
b0 l
b0 /
b0 0
b0 ,
b0 j
b0 V
b0 b
b0 +
b0 k
b0 `
b0 h
b0 .
b0 1
b0 2
b0 o
b0 f
b0 i
b0 m
b0 L
b0 [
b0 d
b0 G
b0 Y
b0 B
b0 U
b0 a
b0 g
b0 =
b0 S
b0 Q
b0 ^
b0 8
b0 O
b0 W
b0 _
b0 \
b0 c
b0 R
b0 ]
b0 -
b0 p
b0 M
b0 Z
b0 H
b0 X
b0 C
b0 T
b0 >
b0 P
b0 9
b0 N
b0 n
b0 K
b0 J
b0 I
b0 F
b0 E
b0 D
b0 A
b0 @
b0 ?
b0 <
b0 ;
b0 :
b0 7
b0 6
b0 5
b10000 *
b1 &
b0 #
b0 (
b0 "
b0 '
#20
b10000 *
b0 $
b10 &
b1 #
b1 (
#30
b10000 *
b11 &
b10 #
b10 (
#40
b10000 *
b100 &
b11 #
b11 (
#50
b10000 *
b101 &
b100 #
b100 (
#60
b10000 *
b110 &
b101 #
b101 (
#70
b10000 *
b111 &
b110 #
b110 (
#80
b10000 *
b1000 &
b111 #
b111 (
#90
b10000 *
b1001 &
b1000 #
b1000 (
#100
b10000 *
b1 %
b0 &
b1001 #
b1001 (
#110
b10000 *
b1 &
b0 #
b0 (
b1 "
b1 '
#120
b1 !
b1 )
b1 4
b1 /
b1 0
b1 +
b1 k
b1 a
b1 g
b1 R
b1 ]
b1 9
b1 N
b1 5
b10000 *
b1 $
b10 &
b1 #
b1 (
#130
b10 !
b10 )
b10 4
b10 /
b10 0
b10 +
b10 k
b10 a
b10 g
b10 R
b10 ]
b10 9
b10 N
b10 5
b10000 *
b11 &
b10 #
b10 (
#140
b11 !
b11 )
b11 4
b11 /
b11 0
b11 +
b11 k
b11 a
b11 g
b11 R
b11 ]
b11 9
b11 N
b11 5
b10000 *
b100 &
b11 #
b11 (
#150
b100 !
b100 )
b100 4
b100 /
b100 0
b100 +
b100 k
b100 a
b100 g
b100 R
b100 ]
b100 9
b100 N
b100 5
b10000 *
b101 &
b100 #
b100 (
#160
b101 !
b101 )
b101 4
b101 /
b101 0
b101 +
b101 k
b101 a
b101 g
b101 R
b101 ]
b101 9
b101 N
b101 5
b10000 *
b110 &
b101 #
b101 (
#170
b110 !
b110 )
b110 4
b110 /
b110 0
b110 +
b110 k
b110 a
b110 g
b110 R
b110 ]
b110 9
b110 N
b110 5
b10000 *
b111 &
b110 #
b110 (
#180
b111 !
b111 )
b111 4
b111 /
b111 0
b111 +
b111 k
b111 a
b111 g
b111 R
b111 ]
b111 9
b111 N
b111 5
b10000 *
b1000 &
b111 #
b111 (
#190
b1000 !
b1000 )
b1000 4
b1000 /
b1000 0
b1000 +
b1000 k
b1000 a
b1000 g
b1000 R
b1000 ]
b1000 9
b1000 N
b1000 5
b10000 *
b1001 &
b1000 #
b1000 (
#200
b1001 !
b1001 )
b1001 4
b1001 /
b1001 0
b1001 +
b1001 k
b1001 a
b1001 g
b1001 R
b1001 ]
b1001 9
b1001 N
b1001 5
b10000 *
b10 %
b0 &
b1001 #
b1001 (
#210
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 5
b10000 *
b1 &
b0 #
b0 (
b10 "
b10 '
#220
b10 !
b10 )
b10 4
b10 /
b10 0
b10 +
b10 k
b10 a
b10 g
b10 R
b10 ]
b10 9
b10 N
b10 6
b10000 *
b10 &
b1 #
b1 (
#230
b100 !
b100 )
b100 4
b100 /
b100 0
b100 +
b100 k
b100 a
b100 g
b100 R
b100 ]
b100 9
b100 N
b100 6
b10000 *
b11 &
b10 #
b10 (
#240
b110 !
b110 )
b110 4
b110 /
b110 0
b110 +
b110 k
b110 a
b110 g
b110 R
b110 ]
b110 9
b110 N
b110 6
b10000 *
b100 &
b11 #
b11 (
#250
b1000 !
b1000 )
b1000 4
b1000 /
b1000 0
b1000 +
b1000 k
b1000 a
b1000 g
b1000 R
b1000 ]
b1000 9
b1000 N
b1000 6
b10000 *
b101 &
b100 #
b100 (
#260
b1010 !
b1010 )
b1010 4
b1010 /
b1010 0
b1010 +
b1010 k
b1010 a
b1010 g
b1010 R
b1010 ]
b1010 9
b1010 N
b1010 6
b10000 *
b110 &
b101 #
b101 (
#270
b1100 !
b1100 )
b1100 4
b1100 /
b1100 0
b1100 +
b1100 k
b1100 a
b1100 g
b1100 R
b1100 ]
b1100 9
b1100 N
b1100 6
b10000 *
b111 &
b110 #
b110 (
#280
b1110 !
b1110 )
b1110 4
b1110 /
b1110 0
b1110 +
b1110 k
b1110 a
b1110 g
b1110 R
b1110 ]
b1110 9
b1110 N
b1110 6
b10000 *
b1000 &
b111 #
b111 (
#290
b10000 !
b10000 )
b10000 4
b10000 /
b10000 0
b10000 +
b10000 k
b10000 a
b10000 g
b10000 R
b10000 ]
b10000 9
b10000 N
b10000 6
b10000 *
b1001 &
b1000 #
b1000 (
#300
b10010 !
b10010 )
b10010 4
b10010 /
b10010 0
b10010 +
b10010 k
b10010 a
b10010 g
b10010 R
b10010 ]
b10010 9
b10010 N
b10010 6
b10000 *
b11 %
b0 &
b1001 #
b1001 (
#310
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 6
b10000 *
b1 &
b0 #
b0 (
b11 "
b11 '
#320
b11 !
b11 )
b11 4
b11 /
b11 0
b11 +
b11 k
b11 a
b11 g
b11 R
b11 ]
b11 9
b11 N
b10 6
b1 5
b10000 *
b10 &
b1 #
b1 (
#330
b110 !
b110 )
b110 4
b110 /
b110 0
b110 +
b110 k
b110 a
b110 g
b110 R
b110 ]
b110 9
b110 N
b100 6
b10 5
b10000 *
b11 &
b10 #
b10 (
#340
b1001 !
b1001 )
b1001 4
b1001 /
b1001 0
b1001 +
b1001 k
b1000 Q
b1000 ^
b1001 a
b1001 g
b1 R
b1 ]
b100 8
b100 O
b101 9
b101 N
b110 6
b11 5
b10000 *
b100 &
b11 #
b11 (
#350
b1100 !
b1100 )
b1100 4
b1100 /
b1100 0
b1100 +
b1100 k
b0 `
b0 h
b0 Q
b0 ^
b1100 a
b1100 g
b1100 R
b1100 ]
b0 8
b0 O
b1100 9
b1100 N
b1000 6
b100 5
b10000 *
b101 &
b100 #
b100 (
#360
b1111 !
b1111 )
b1111 4
b1111 /
b1111 0
b1111 +
b1111 k
b1111 a
b1111 g
b1111 R
b1111 ]
b1111 9
b1111 N
b1010 6
b101 5
b10000 *
b110 &
b101 #
b101 (
#370
b10010 !
b10010 )
b10010 4
b10010 /
b10010 0
b10010 +
b10010 k
b10000 Q
b10000 ^
b10010 a
b10010 g
b10 R
b10 ]
b1000 8
b1000 O
b1010 9
b1010 N
b1100 6
b110 5
b10000 *
b111 &
b110 #
b110 (
#380
b10101 !
b10101 )
b10101 4
b10101 /
b10101 0
b10101 +
b10101 k
b10101 a
b10101 g
b101 R
b101 ]
b1100 8
b1100 O
b1001 9
b1001 N
b1110 6
b111 5
b10000 *
b1000 &
b111 #
b111 (
#390
b11000 !
b11000 )
b11000 4
b11000 /
b11000 0
b11000 +
b11000 k
b0 `
b0 h
b0 Q
b0 ^
b11000 a
b11000 g
b11000 R
b11000 ]
b0 8
b0 O
b11000 9
b11000 N
b10000 6
b1000 5
b10000 *
b1001 &
b1000 #
b1000 (
#400
b11011 !
b11011 )
b11011 4
b11011 /
b11011 0
b11011 +
b11011 k
b11011 a
b11011 g
b11011 R
b11011 ]
b11011 9
b11011 N
b10010 6
b1001 5
b10000 *
b100 %
b0 &
b1001 #
b1001 (
#410
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 6
b0 5
b10000 *
b1 &
b0 #
b0 (
b100 "
b100 '
#420
b100 !
b100 )
b100 4
b100 /
b100 0
b100 +
b100 k
b100 a
b100 g
b100 R
b100 ]
b100 9
b100 N
b100 7
b10000 *
b10 &
b1 #
b1 (
#430
b1000 !
b1000 )
b1000 4
b1000 /
b1000 0
b1000 +
b1000 k
b1000 a
b1000 g
b1000 R
b1000 ]
b1000 9
b1000 N
b1000 7
b10000 *
b11 &
b10 #
b10 (
#440
b1100 !
b1100 )
b1100 4
b1100 /
b1100 0
b1100 +
b1100 k
b1100 a
b1100 g
b1100 R
b1100 ]
b1100 9
b1100 N
b1100 7
b10000 *
b100 &
b11 #
b11 (
#450
b10000 !
b10000 )
b10000 4
b10000 /
b10000 0
b10000 +
b10000 k
b10000 a
b10000 g
b10000 R
b10000 ]
b10000 9
b10000 N
b10000 7
b10000 *
b101 &
b100 #
b100 (
#460
b10100 !
b10100 )
b10100 4
b10100 /
b10100 0
b10100 +
b10100 k
b10100 a
b10100 g
b10100 R
b10100 ]
b10100 9
b10100 N
b10100 7
b10000 *
b110 &
b101 #
b101 (
#470
b11000 !
b11000 )
b11000 4
b11000 /
b11000 0
b11000 +
b11000 k
b11000 a
b11000 g
b11000 R
b11000 ]
b11000 9
b11000 N
b11000 7
b10000 *
b111 &
b110 #
b110 (
#480
b11100 !
b11100 )
b11100 4
b11100 /
b11100 0
b11100 +
b11100 k
b11100 a
b11100 g
b11100 R
b11100 ]
b11100 9
b11100 N
b11100 7
b10000 *
b1000 &
b111 #
b111 (
#490
b100000 !
b100000 )
b100000 4
b100000 /
b100000 0
b100000 +
b100000 k
b100000 a
b100000 g
b100000 R
b100000 ]
b100000 9
b100000 N
b100000 7
b10000 *
b1001 &
b1000 #
b1000 (
#500
b100100 !
b100100 )
b100100 4
b100100 /
b100100 0
b100100 +
b100100 k
b100100 a
b100100 g
b100100 R
b100100 ]
b100100 9
b100100 N
b100100 7
b10000 *
b101 %
b0 &
b1001 #
b1001 (
#510
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 7
b10000 *
b1 &
b0 #
b0 (
b101 "
b101 '
#520
b101 !
b101 )
b101 4
b101 /
b101 0
b101 +
b101 k
b101 a
b101 g
b101 R
b101 ]
b101 9
b101 N
b100 7
b1 5
b10000 *
b10 &
b1 #
b1 (
#530
b1010 !
b1010 )
b1010 4
b1010 /
b1010 0
b1010 +
b1010 k
b1010 a
b1010 g
b1010 R
b1010 ]
b1010 9
b1010 N
b1000 7
b10 5
b10000 *
b11 &
b10 #
b10 (
#540
b1111 !
b1111 )
b1111 4
b1111 /
b1111 0
b1111 +
b1111 k
b1111 a
b1111 g
b1111 R
b1111 ]
b1111 9
b1111 N
b1100 7
b11 5
b10000 *
b100 &
b11 #
b11 (
#550
b10100 !
b10100 )
b10100 4
b10100 /
b10100 0
b10100 +
b10100 k
b10100 a
b10100 g
b10100 R
b10100 ]
b10100 9
b10100 N
b10000 7
b100 5
b10000 *
b101 &
b100 #
b100 (
#560
b11001 !
b11001 )
b11001 4
b11001 /
b11001 0
b11001 +
b11001 k
b11001 a
b11001 g
b11001 R
b11001 ]
b1000 8
b1000 O
b10001 9
b10001 N
b10100 7
b101 5
b10000 *
b110 &
b101 #
b101 (
#570
b11110 !
b11110 )
b11110 4
b11110 /
b11110 0
b0 `
b0 h
b11110 +
b11110 k
b11110 a
b11110 g
b0 Q
b0 ^
b11110 R
b11110 ]
b0 8
b0 O
b11110 9
b11110 N
b11000 7
b110 5
b10000 *
b111 &
b110 #
b110 (
#580
b100011 !
b100011 )
b100011 4
b100000 `
b100000 h
b100011 /
b100011 0
b100011 +
b100011 k
b10000 Q
b10000 ^
b11 a
b11 g
b10011 R
b10011 ]
b1000 8
b1000 O
b11011 9
b11011 N
b11100 7
b111 5
b10000 *
b1000 &
b111 #
b111 (
#590
b101000 !
b101000 )
b101000 4
b101000 /
b101000 0
b0 ,
b0 j
b101000 +
b101000 k
b0 `
b0 h
b0 Q
b0 ^
b101000 a
b101000 g
b101000 R
b101000 ]
b0 8
b0 O
b101000 9
b101000 N
b100000 7
b1000 5
b10000 *
b1001 &
b1000 #
b1000 (
#600
b101101 !
b101101 )
b101101 4
b101101 /
b101101 0
b101101 +
b101101 k
b101101 a
b101101 g
b101101 R
b101101 ]
b101101 9
b101101 N
b100100 7
b1001 5
b10000 *
b110 %
b0 &
b1001 #
b1001 (
#610
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 7
b0 5
b10000 *
b1 &
b0 #
b0 (
b110 "
b110 '
#620
b110 !
b110 )
b110 4
b110 /
b110 0
b110 +
b110 k
b110 a
b110 g
b110 R
b110 ]
b110 9
b110 N
b100 7
b10 6
b10000 *
b10 &
b1 #
b1 (
#630
b1100 !
b1100 )
b1100 4
b1100 /
b1100 0
b1100 +
b1100 k
b1100 a
b1100 g
b1100 R
b1100 ]
b1100 9
b1100 N
b1000 7
b100 6
b10000 *
b11 &
b10 #
b10 (
#640
b10010 !
b10010 )
b10010 4
b10010 /
b10010 0
b10000 Q
b10000 ^
b10010 +
b10010 k
b10010 a
b10010 g
b1000 8
b1000 O
b10 R
b10 ]
b1010 9
b1010 N
b1100 7
b110 6
b10000 *
b100 &
b11 #
b11 (
#650
b11000 !
b11000 )
b11000 4
b11000 /
b11000 0
b0 Q
b0 ^
b11000 +
b11000 k
b0 `
b0 h
b11000 a
b11000 g
b0 8
b0 O
b11000 R
b11000 ]
b11000 9
b11000 N
b10000 7
b1000 6
b10000 *
b101 &
b100 #
b100 (
#660
b11110 !
b11110 )
b11110 4
b11110 /
b11110 0
b11110 +
b11110 k
b11110 a
b11110 g
b11110 R
b11110 ]
b11110 9
b11110 N
b10100 7
b1010 6
b10000 *
b110 &
b101 #
b101 (
#670
b100100 !
b100100 )
b100100 4
b100100 /
b100100 0
b100000 Q
b100000 ^
b100100 +
b100100 k
b100100 a
b100100 g
b10000 8
b10000 O
b100 R
b100 ]
b10100 9
b10100 N
b11000 7
b1100 6
b10000 *
b111 &
b110 #
b110 (
#680
b101010 !
b101010 )
b101010 4
b101010 /
b101010 0
b101010 +
b101010 k
b101010 a
b101010 g
b11000 8
b11000 O
b1010 R
b1010 ]
b10010 9
b10010 N
b11100 7
b1110 6
b10000 *
b1000 &
b111 #
b111 (
#690
b110000 !
b110000 )
b110000 4
b110000 /
b110000 0
b0 Q
b0 ^
b110000 +
b110000 k
b0 `
b0 h
b110000 a
b110000 g
b0 8
b0 O
b110000 R
b110000 ]
b110000 9
b110000 N
b100000 7
b10000 6
b10000 *
b1001 &
b1000 #
b1000 (
#700
b110110 !
b110110 )
b110110 4
b110110 /
b110110 0
b110110 +
b110110 k
b110110 a
b110110 g
b110110 R
b110110 ]
b110110 9
b110110 N
b100100 7
b10010 6
b10000 *
b111 %
b0 &
b1001 #
b1001 (
#710
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 7
b0 6
b10000 *
b1 &
b0 #
b0 (
b111 "
b111 '
#720
b111 !
b111 )
b111 4
b111 /
b111 0
b111 +
b111 k
b111 a
b111 g
b111 R
b111 ]
b111 9
b111 N
b100 7
b10 6
b1 5
b10000 *
b10 &
b1 #
b1 (
#730
b1110 !
b1110 )
b1110 4
b1110 /
b1110 0
b1110 +
b1110 k
b1110 a
b1110 g
b1110 R
b1110 ]
b1110 9
b1110 N
b1000 7
b100 6
b10 5
b10000 *
b11 &
b10 #
b10 (
#740
b10101 !
b10101 )
b10101 4
b10101 /
b10101 0
b10000 Q
b10000 ^
b10101 +
b10101 k
b10101 a
b10101 g
b1100 8
b1100 O
b101 R
b101 ]
b1001 9
b1001 N
b1100 7
b110 6
b11 5
b10000 *
b100 &
b11 #
b11 (
#750
b0 ,
b0 j
b11100 !
b11100 )
b11100 4
b11100 /
b11100 0
b11100 +
b11100 k
b0 `
b0 h
b11100 a
b11100 g
b0 Q
b0 ^
b0 8
b0 O
b11100 R
b11100 ]
b11100 9
b11100 N
b10000 7
b1000 6
b100 5
b10000 *
b101 &
b100 #
b100 (
#760
b100011 !
b100011 )
b100011 4
b100000 `
b100000 h
b100011 /
b100011 0
b100011 +
b100011 k
b10000 Q
b10000 ^
b11 a
b11 g
b10011 R
b10011 ]
b1000 8
b1000 O
b11011 9
b11011 N
b10100 7
b1010 6
b101 5
b10000 *
b110 &
b101 #
b101 (
#770
b101010 !
b101010 )
b101010 4
b101010 /
b101010 0
b0 `
b0 h
b101010 +
b101010 k
b101010 a
b101010 g
b100000 Q
b100000 ^
b1010 R
b1010 ]
b11000 8
b11000 O
b10010 9
b10010 N
b11000 7
b1100 6
b110 5
b10000 *
b111 &
b110 #
b110 (
#780
b10000 `
b10000 h
b110001 !
b110001 )
b110001 4
b110001 /
b110001 0
b101000 Q
b101000 ^
b110001 +
b110001 k
b100001 a
b100001 g
b11100 8
b11100 O
b1001 R
b1001 ]
b10101 9
b10101 N
b11100 7
b1110 6
b111 5
b10000 *
b1000 &
b111 #
b111 (
#790
b0 ,
b0 j
b111000 !
b111000 )
b111000 4
b111000 /
b111000 0
b111000 +
b111000 k
b0 `
b0 h
b111000 a
b111000 g
b0 Q
b0 ^
b0 8
b0 O
b111000 R
b111000 ]
b111000 9
b111000 N
b100000 7
b10000 6
b1000 5
b10000 *
b1001 &
b1000 #
b1000 (
#800
b111111 !
b111111 )
b111111 4
b111111 /
b111111 0
b111111 +
b111111 k
b111111 a
b111111 g
b111111 R
b111111 ]
b111111 9
b111111 N
b100100 7
b10010 6
b1001 5
b10000 *
b1000 %
b0 &
b1001 #
b1001 (
#810
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 9
b0 N
b0 7
b0 6
b0 5
b10000 *
b1 &
b0 #
b0 (
b1000 "
b1000 '
#820
b1000 !
b1000 )
b1000 4
b1000 /
b1000 0
b1000 +
b1000 k
b1000 a
b1000 g
b1000 R
b1000 ]
b1000 >
b1000 P
b1000 :
b10000 *
b10 &
b1 #
b1 (
#830
b10000 !
b10000 )
b10000 4
b10000 /
b10000 0
b10000 +
b10000 k
b10000 a
b10000 g
b10000 R
b10000 ]
b10000 >
b10000 P
b10000 :
b10000 *
b11 &
b10 #
b10 (
#840
b11000 !
b11000 )
b11000 4
b11000 /
b11000 0
b11000 +
b11000 k
b11000 a
b11000 g
b11000 R
b11000 ]
b11000 >
b11000 P
b11000 :
b10000 *
b100 &
b11 #
b11 (
#850
b100000 !
b100000 )
b100000 4
b100000 /
b100000 0
b100000 +
b100000 k
b100000 a
b100000 g
b100000 R
b100000 ]
b100000 >
b100000 P
b100000 :
b10000 *
b101 &
b100 #
b100 (
#860
b101000 !
b101000 )
b101000 4
b101000 /
b101000 0
b101000 +
b101000 k
b101000 a
b101000 g
b101000 R
b101000 ]
b101000 >
b101000 P
b101000 :
b10000 *
b110 &
b101 #
b101 (
#870
b110000 !
b110000 )
b110000 4
b110000 /
b110000 0
b110000 +
b110000 k
b110000 a
b110000 g
b110000 R
b110000 ]
b110000 >
b110000 P
b110000 :
b10000 *
b111 &
b110 #
b110 (
#880
b111000 !
b111000 )
b111000 4
b111000 /
b111000 0
b111000 +
b111000 k
b111000 a
b111000 g
b111000 R
b111000 ]
b111000 >
b111000 P
b111000 :
b10000 *
b1000 &
b111 #
b111 (
#890
b1000000 !
b1000000 )
b1000000 4
b1000000 /
b1000000 0
b1000000 +
b1000000 k
b1000000 a
b1000000 g
b1000000 R
b1000000 ]
b1000000 >
b1000000 P
b1000000 :
b10000 *
b1001 &
b1000 #
b1000 (
#900
b1001000 !
b1001000 )
b1001000 4
b1001000 /
b1001000 0
b1001000 +
b1001000 k
b1001000 a
b1001000 g
b1001000 R
b1001000 ]
b1001000 >
b1001000 P
b1001000 :
b10000 *
b1001 %
b0 &
b1001 #
b1001 (
#910
b0 !
b0 )
b0 4
b0 /
b0 0
b0 +
b0 k
b0 a
b0 g
b0 R
b0 ]
b0 >
b0 P
b0 :
b10000 *
b1 &
b0 #
b0 (
b1001 "
b1001 '
#920
b1001 !
b1001 )
b1001 4
b1001 /
b1001 0
b1001 +
b1001 k
b1001 a
b1001 g
b1001 R
b1001 ]
b1000 >
b1000 P
b1 9
b1 N
b1000 :
b1 5
b10000 *
b10 &
b1 #
b1 (
#930
b10010 !
b10010 )
b10010 4
b10010 /
b10010 0
b10010 +
b10010 k
b10010 a
b10010 g
b10010 R
b10010 ]
b10000 >
b10000 P
b10 9
b10 N
b10000 :
b10 5
b10000 *
b11 &
b10 #
b10 (
#940
b11011 !
b11011 )
b11011 4
b11011 /
b11011 0
b11011 +
b11011 k
b11011 a
b11011 g
b11011 R
b11011 ]
b11000 >
b11000 P
b11 9
b11 N
b11000 :
b11 5
b10000 *
b100 &
b11 #
b11 (
#950
b100100 !
b100100 )
b100100 4
b100100 /
b100100 0
b100100 +
b100100 k
b100100 a
b100100 g
b100100 R
b100100 ]
b100000 >
b100000 P
b100 9
b100 N
b100000 :
b100 5
b10000 *
b101 &
b100 #
b100 (
#960
b101101 !
b101101 )
b101101 4
b101101 /
b101101 0
b101101 +
b101101 k
b101101 a
b101101 g
b101101 R
b101101 ]
b101000 >
b101000 P
b101 9
b101 N
b101000 :
b101 5
b10000 *
b110 &
b101 #
b101 (
#970
b110110 !
b110110 )
b110110 4
b110110 /
b110110 0
b110110 +
b110110 k
b110110 a
b110110 g
b110110 R
b110110 ]
b110000 >
b110000 P
b110 9
b110 N
b110000 :
b110 5
b10000 *
b111 &
b110 #
b110 (
#980
b111111 !
b111111 )
b111111 4
b111111 /
b111111 0
b111111 +
b111111 k
b111111 a
b111111 g
b111111 R
b111111 ]
b111000 >
b111000 P
b111 9
b111 N
b111000 :
b111 5
b10000 *
b1000 &
b111 #
b111 (
#990
b1001000 !
b1001000 )
b1001000 4
b1001000 /
b1001000 0
b1001000 +
b1001000 k
b1001000 a
b1001000 g
b1001000 R
b1001000 ]
b1000000 >
b1000000 P
b1000 9
b1000 N
b1000000 :
b1000 5
b10000 *
b1001 &
b1000 #
b1000 (
#1000
b1010001 !
b1010001 )
b1010001 4
b1010001 /
b1010001 0
b1010001 +
b1010001 k
b1010001 a
b1010001 g
b10000 Q
b10000 ^
b1000001 R
b1000001 ]
b1001000 >
b1001000 P
b1001 9
b1001 N
b1001000 :
b1001 5
b10000 *
b1010 %
b1010 &
b1001 #
b1001 (
